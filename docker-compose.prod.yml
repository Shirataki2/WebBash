version: "3.8"
services:
  frontend:
    build:
      context: ./frontend
      target: PROD
    env_file: ./.env.prod
    environment:
      NODE_ENV: production
    working_dir: /app
    volumes:
      - ./frontend:/app
    entrypoint: yarn build
  api:
    build:
      context: ./api
      target: PROD
    env_file:
      - ./.env.test
      - ./.env.test.secret
    environment:
      NODE_ENV: production
    working_dir: /src
    volumes:
      - /run/docker.sock:/run/docker.sock
      - ./api/etc/nginx/sites-enabled/default:/etc/nginx/sites-enabled/default
      - ./api/src:/src
      - ./api/src/images:/images
      - /tmp/app:/tmp/app
    entrypoint: sh ./entrypoint.sh
    restart: always
    depends_on:
      - mongo
      - postgres
  proxy:
    build: ./proxy
    ports:
      - 9999:80
    depends_on:
      - api
    volumes:
      - ./proxy/etc/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/var/www/webbash
  mongo:
    image: mongo
    restart: always
    env_file:
      - ./.env.test
      - ./.env.test.secret
    volumes:
      - ./mongo_db:/data/db
  postgres:
    image: postgres:11-alpine
    ports:
      - 5432
    env_file:
      - ./.env.test
      - ./.env.test.secret
    volumes:
      - ./postgres:/var/lib/postgresql/data
