version: "3.8"
services:
  frontend:
    build:
      context: ./frontend
      target: PROD
    env_file: ./.env.prod
    environment:
      NODE_ENV: production
    working_dir: /app
    volumes:
      - ./frontend:/app
    entrypoint: yarn build
  backend:
    build:
      context: ./backend
      target: PROD
    env_file: ./.env.prod
    environment:
      NODE_ENV: production
    working_dir: /app
    volumes:
      - ./backend/src:/app
      - ./frontend/dist:/app/static
    entrypoint: bash /app/entrypoint.sh
  api:
    build:
      context: ./api
      target: PROD
    env_file: ./.env.prod
    environment:
      NODE_ENV: production
    working_dir: /app
    volumes:
      - /run/docker.sock:/run/docker.sock
      - ./api/src:/app
      - /tmp/app:/tmp/app
    entrypoint: bash /app/entrypoint.sh
  proxy:
    build: ./proxy
    ports:
      - 9999:80
    depends_on:
      - backend
      - api
  kibana:
    image: docker.elastic.co/kibana/kibana:7.2.0
    volumes:
      - ./elastic/kibana.prod.yml:/usr/share/kibana/config/kibana.yml
      - ./elastic/install-plugin-kibana.sh:/tmp/install-plugin.sh
    ports:
      - 5601:5601
    entrypoint: >
      bash -c "chmod +x /tmp/install-plugin.sh &&
               /usr/local/bin/kibana-docker"
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    entrypoint: >
      bash -c "chmod +x /tmp/install-plugin.sh &&
             /tmp/install-plugin.sh analysis-kuromoji &&
             /tmp/install-plugin.sh analysis-icu &&
             docker-entrypoint.sh"
    container_name: es01
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./elastic/install-plugin.sh:/tmp/install-plugin.sh
      - ./elastic/esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    entrypoint: >
      bash -c "chmod +x /tmp/install-plugin.sh &&
               /tmp/install-plugin.sh analysis-kuromoji &&
               /tmp/install-plugin.sh analysis-icu &&
               docker-entrypoint.sh"
    container_name: es02
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - ./elastic/install-plugin.sh:/tmp/install-plugin.sh
      - ./elastic/esdata02:/usr/share/elasticsearch/data
  zabbix-agent:
    image: monitoringartist/dockbix-agent-xxl-limited:latest
    hostname: zabbix-agent
    env_file:
      - ./.env.prod
      - ./.env.prod.secret
    environment:
      ZA_Server: 0.0.0.0/0
      ZA_ServerActive: zabbix-server
    volumes:
      - /:/rootfs
      - /var/run:/var/run
    restart: always
  zabbix-db:
    image: monitoringartist/zabbix-db-mariadb
    env_file:
      - ./.env.prod
      - ./.env.prod.secret
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./healthchecker/zabbix-db-data:/var/lib/mysql
    restart: always
  zabbix-server:
    image: monitoringartist/dockbix-xxl:latest
    env_file:
      - ./.env.prod
      - ./.env.prod.secret
    environment:
      ZS_DBHost: zabbix-db
      #XXL_zapix: 'true'
      #XXL_grapher: 'true'
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./healthchecker/zabbix-server/alertscripts:/usr/local/share/zabbix/alertscripts
    ports:
      - 38080:80
    restart: always
    depends_on:
      - zabbix-db
      - zabbix-agent

volumes:
  esdata01:
    driver: local
  esdata02:
    driver: local
